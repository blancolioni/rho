[global]
uniform vec3 spotPosition;
uniform vec3 spotColor;
uniform mat4 model;
in vec3 fragmentPosition;

[local]
vec3 normal = normalize(transpose(inverse(mat3(model))) * fragmentNormal);
vec3 lightDirection = normalize(spotPosition - fragmentPosition);
float diffuseCoefficient = max(dot(normal, lightDirection), 0.0);
vec3 diffuseColor = diffuseCoefficient * spotColor * surfaceColor.rgb;
vec3 linearColor = diffuseColor;
[main]
litColor += linearColor;